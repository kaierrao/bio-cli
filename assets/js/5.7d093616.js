(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{165:function(a,t,e){"use strict";e.r(t);var i=e(0),s=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"init-project"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#init-project","aria-hidden":"true"}},[a._v("#")]),a._v(" Init Project")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bio init "),e("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("scaffoldName "),e("span",{attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("npm")]),a._v(" registry "),e("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" scaffold short name"),e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("ul",[e("li",[e("p",[a._v("description")]),a._v(" "),e("p",[a._v("It will:")]),a._v(" "),e("ul",[e("li",[a._v("init project files in current directory.")]),a._v(" "),e("li",[a._v("run "),e("code",[a._v("npm install")]),a._v(" automatically.")])])]),a._v(" "),e("li",[e("p",[a._v("params")]),a._v(" "),e("ul",[e("li",[e("p",[e("code",[a._v("scaffoldName in npm registry")])]),a._v(" "),e("p",[a._v("bio will search for scaffoldName from npm registry")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("scaffold short name")])]),a._v(" "),e("p",[a._v("By default, bio provides shortName for scaffolds in npm as list:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("vue")]),a._v(" for "),e("code",[a._v("bio-scaffold-vue")])]),a._v(" "),e("li",[e("code",[a._v("react")]),a._v(" for "),e("code",[a._v("bio-scaffold-react")])]),a._v(" "),e("li",[e("code",[a._v("pure")]),a._v(" for "),e("code",[a._v("bio-scaffold-pure")])])])])])]),a._v(" "),e("li",[e("p",[a._v("examples")]),a._v(" "),e("p",[a._v("init a vue project: "),e("code",[a._v("bio init bio-scaffold-vue")]),a._v(" or "),e("code",[a._v("bio init vue")])]),a._v(" "),e("p",[a._v("init a react project: "),e("code",[a._v("bio init bio-scaffold-react")]),a._v(" or "),e("code",[a._v("bio init react")])]),a._v(" "),e("p",[a._v("init a pure project: "),e("code",[a._v("bio init bio-scaffold-pure")]),a._v(" or "),e("code",[a._v("bio init pure")])])])]),a._v(" "),e("h1",{attrs:{id:"compile-project"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compile-project","aria-hidden":"true"}},[a._v("#")]),a._v(" Compile Project")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bio run "),e("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("taskName that scaffold supports"),e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-n, --no-watch"),e("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),e("ul",[e("li",[e("p",[a._v("description")]),a._v(" "),e("p",[a._v("It will run task that is only supported by scaffold, which was defined in "),e("code",[a._v("bio init <scaffoldName>")]),a._v(".")])]),a._v(" "),e("li",[e("p",[a._v("param")]),a._v(" "),e("ul",[e("li",[e("p",[e("code",[a._v("<taskName that scaffold supports>")])]),a._v(" "),e("p",[a._v("By default, these tasks are supported in bio inside scaffolds as list:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("dev-daily")]),a._v(": develop in daily envioronment.")]),a._v(" "),e("li",[e("code",[a._v("dev-pre")]),a._v(": develop in re envioronment.")]),a._v(" "),e("li",[e("code",[a._v("dev-prod")]),a._v(": develop in prod envioronment.")]),a._v(" "),e("li",[e("code",[a._v("build-daily")]),a._v(": build in daily envioronment.")]),a._v(" "),e("li",[e("code",[a._v("build-pre")]),a._v(": build in pre envioronment.")]),a._v(" "),e("li",[e("code",[a._v("build-prod")]),a._v(": build in prod envioronment.")])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("-n, --no-watch")])]),a._v(" "),e("p",[e("code",[a._v("bio")]),a._v(" will lanch a local server to watch file changes by default.")]),a._v(" "),e("p",[e("code",[a._v("-n, --no-watch")]),a._v(" will close this server.")])])])]),a._v(" "),e("li",[e("p",[a._v("examples")]),a._v(" "),e("ul",[e("li",[a._v("run task "),e("code",[a._v("dev-daily")]),a._v(" and watch file changes: "),e("code",[a._v("bio run dev-daily")])]),a._v(" "),e("li",[a._v("run task "),e("code",[a._v("dev-daily")]),a._v(" and don't watch file changes: "),e("code",[a._v("bio run dev-daily -n")])]),a._v(" "),e("li",[a._v("run task "),e("code",[a._v("build-daily")]),a._v(" and don't watch file changes: "),e("code",[a._v("bio run build-daily -n")])])])])]),a._v(" "),e("h1",{attrs:{id:"mock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mock","aria-hidden":"true"}},[a._v("#")]),a._v(" Mock")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bio mock "),e("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("port"),e("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),e("p",[e("code",[a._v("bio")]),a._v(" will lanch a local mock server and create a test file named as "),e("code",[a._v("./mock/test.json")]),a._v(".")]),a._v(" "),e("p",[e("code",[a._v("7000")]),a._v(" is the default server port, and it can be changed by offering port.")]),a._v(" "),e("p",[a._v("example:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bio mock 8000\n")])])]),e("h1",{attrs:{id:"lint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lint","aria-hidden":"true"}},[a._v("#")]),a._v(" Lint")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("init lint config")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bio lint init\n")])])])]),a._v(" "),e("li",[e("p",[a._v("run lint")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bio lint "),e("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--fix"),e("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),e("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-w, --watch"),e("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),e("p",[a._v("examples:")]),a._v(" "),e("ul",[e("li",[a._v("auto fixing and only run once: "),e("code",[a._v("bio lint --fix")])]),a._v(" "),e("li",[a._v("not auto fixing and only run once: "),e("code",[a._v("bio lint")])]),a._v(" "),e("li",[a._v("auto fixing and watching file changes: "),e("code",[a._v("bio lint --fix -w")])]),a._v(" "),e("li",[a._v("not auto fixing and watching file changes: "),e("code",[a._v("bio lint -w")])])])])]),a._v(" "),e("h1",{attrs:{id:"help"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#help","aria-hidden":"true"}},[a._v("#")]),a._v(" Help")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bio "),e("span",{attrs:{class:"token function"}},[a._v("help")]),a._v("\n")])])]),e("p",[a._v("It will show helps.")])])}],!1,null,null,null);s.options.__file="README.md";t.default=s.exports}}]);